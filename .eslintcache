[{"/home/ganhongyao/donezo-frontend/src/Components/LoginPage.js":"1","/home/ganhongyao/donezo-frontend/src/Components/TodoItem.js":"2","/home/ganhongyao/donezo-frontend/src/Components/AddTodoForm.js":"3","/home/ganhongyao/donezo-frontend/src/Components/ItemDialog.js":"4","/home/ganhongyao/donezo-frontend/src/Components/TableHeader.js":"5","/home/ganhongyao/donezo-frontend/src/Components/HomePage.js":"6","/home/ganhongyao/donezo-frontend/src/Components/EditTodoForm.js":"7","/home/ganhongyao/donezo-frontend/src/App.js":"8","/home/ganhongyao/donezo-frontend/src/Components/Drawer.js":"9","/home/ganhongyao/donezo-frontend/src/Components/SearchBar.js":"10","/home/ganhongyao/donezo-frontend/src/Components/SignupPage.js":"11","/home/ganhongyao/donezo-frontend/src/Components/TodoContainer.js":"12","/home/ganhongyao/donezo-frontend/src/Components/CompletedPage.js":"13","/home/ganhongyao/donezo-frontend/src/Components/TodayPage.js":"14"},{"size":4672,"mtime":1610004417609,"results":"15","hashOfConfig":"16"},{"size":7812,"mtime":1610199514604,"results":"17","hashOfConfig":"16"},{"size":4467,"mtime":1610020292404,"results":"18","hashOfConfig":"16"},{"size":2297,"mtime":1610197176447,"results":"19","hashOfConfig":"16"},{"size":2459,"mtime":1610018615514,"results":"20","hashOfConfig":"16"},{"size":7302,"mtime":1610200549212,"results":"21","hashOfConfig":"16"},{"size":4198,"mtime":1610025975655,"results":"22","hashOfConfig":"16"},{"size":3796,"mtime":1610201045978,"results":"23","hashOfConfig":"16"},{"size":1855,"mtime":1610204937172,"results":"24","hashOfConfig":"16"},{"size":726,"mtime":1610025745905,"results":"25","hashOfConfig":"16"},{"size":5918,"mtime":1610121007714,"results":"26","hashOfConfig":"16"},{"size":2556,"mtime":1610196227219,"results":"27","hashOfConfig":"16"},{"size":4660,"mtime":1610200960391,"results":"28","hashOfConfig":"16"},{"size":1737,"mtime":1610203437624,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1xuwf1h",{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ganhongyao/donezo-frontend/src/Components/LoginPage.js",["64","65","66","67","68","69"],"import React, { Component} from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport { Avatar, Button, Checkbox, CssBaseline, FormControlLabel, Grid, TextField, withStyles } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.6)',\r\n        padding: '1%',\r\n        marginTop: '10%',\r\n        width: '50%',\r\n        margin: '0 auto'        \r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    form: {\r\n        width: '50%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n        \r\n    },\r\n\r\n    textfield: {\r\n        height: '50%'\r\n    }, \r\n\r\n    button: {\r\n        color: '#54e346',\r\n        backgroundColor: 'white',\r\n        '&:hover': {\r\n            backgroundColor: '#00a152',\r\n        },\r\n    },\r\n\r\n    errormessage: {\r\n        color: 'red'\r\n    }\r\n\r\n\r\n});\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          email: \"\",\r\n          password: \"\",\r\n          loginErrors: \"\"\r\n        }\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const { email, password } = this.state;\r\n        event.preventDefault();\r\n        axios.post(\"http://localhost:3001/api/v1/tokens\",\r\n        {   \r\n            \r\n                \r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                \r\n            \r\n                            \r\n        })\r\n        .then(response => {\r\n            console.log(response)\r\n            if (response.data.logged_in) {\r\n                this.props.handleLogin(response.data)\r\n                this.props.history.push('/home')\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            this.setState({loginErrors: error.response.data.errors})\r\n        })    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n\r\n                <div>LOG IN</div><br/>\r\n                <div className={classes.errormessage}>{this.state.loginErrors}</div>\r\n                <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                    <TextField className={classes.textfield}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        type=\"email\"\r\n                        autoFocus\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <TextField\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}  \r\n                    >\r\n                        LOG IN\r\n                    </Button>    \r\n                </form>\r\n                <Link to=\"/signup\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default withStyles(useStyles)(LoginPage);",["70","71"],"/home/ganhongyao/donezo-frontend/src/Components/TodoItem.js",["72","73","74","75","76"],"/home/ganhongyao/donezo-frontend/src/Components/AddTodoForm.js",["77","78","79","80","81"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormControl, Grid, IconButton, InputLabel, makeStyles, MenuItem, Tooltip } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n\r\n  createbutton: {\r\n    '&:hover': {\r\n      backgroundColor: '#00a152',\r\n    },\r\n  },\r\n\r\n  select: {\r\n    fontSize: '0.5em'\r\n  },\r\n\r\n  button: {\r\n    marginTop: '8%',\r\n    marginLeft: '15%'\r\n  },\r\n\r\n  autocomplete: {\r\n    width: '300px'\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n}));\r\n\r\n\r\nexport default function FormDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const options = props.tags.map(tag => {\r\n    tag.label = tag.name;\r\n    tag.value = tag.name;\r\n    return tag;\r\n  })\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tooltip title=\"Create new task\" placement=\"right\">\r\n        <IconButton onClick={handleClickOpen} className={classes.button}>\r\n          <AddCircleIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      \r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"createform\" maxWidth=\"xs\" scroll={'body'}>\r\n        <form onSubmit={props.addTask}>  \r\n        <DialogTitle id=\"createform\">Create new task</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            name=\"newTitle\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            required\r\n            variant=\"filled\"\r\n            onChange={props.handleChange}\r\n          />\r\n          <hr style={{border: 'white'}}/>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  id=\"duedate\"\r\n                  variant=\"inline\"\r\n                  label=\"Due Date\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  InputAdornmentProps={{ position: \"start\" }}\r\n                  onChange={props.handleDateChange}\r\n                  value={props.defaultDate}\r\n                  required\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n              <br/>\r\n              <FormControl>                \r\n              <Autocomplete\r\n                multiple\r\n                id=\"tags-filled\"\r\n                options={props.tags.map((option) => option.name)}\r\n                freeSolo\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" label={option} size=\"small\" {...getTagProps({ index })} />\r\n                  ))\r\n                \r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"filled\" label=\"Tags\" placeholder=\"Type to create new tag\"/>\r\n                )}\r\n                className={classes.autocomplete}\r\n                onChange={props.handleTagChange}\r\n              />\r\n              </FormControl>\r\n              \r\n\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"newDescription\"\r\n            label=\"Description\"\r\n            fullWidth\r\n            variant=\"filled\"\r\n            onChange={props.handleChange}\r\n            multiline\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\" onClick={handleClose} disabled={!props.canSubmit} className={classes.createbutton}>\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n        </form>\r\n        \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}",["82","83"],"/home/ganhongyao/donezo-frontend/src/Components/ItemDialog.js",["84","85","86","87"],"/home/ganhongyao/donezo-frontend/src/Components/TableHeader.js",["88","89","90","91"],"import React from 'react';\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport SortByAlphaIcon from '@material-ui/icons/SortByAlpha';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    sortButton: {\r\n        fill: 'white',\r\n    }\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n\thead: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\tbody: {\r\n\t\tfontSize: 14,\r\n\t\tpadding: '0px',\r\n        paddingLeft: '10px',\r\n\t}\r\n}))(TableCell);\r\n\r\nexport default function TableHeader(props) {\r\n    const classes = useStyles();\r\n    console.log(props.titleSortedAsc)\r\n    return (\r\n        <TableHead>\r\n           <TableRow>\r\n                <StyledTableCell>\r\n                    Task\r\n                    <IconButton aria-label=\"sortTitle\" onClick={props.handleSortTitle} >\r\n                        {props.titleSortedAsc === 0\r\n                            ? <SortByAlphaIcon style={{fill: 'white'}}/>\r\n                            : props.titleSortedAsc % 2 == 0 \r\n                                ? <ArrowDropDownIcon style={{fill: 'white'}}/>\r\n                                : <ArrowDropUpIcon style={{fill: 'white'}}/>}\r\n                    </IconButton>\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                    Due Date\r\n                    <IconButton aria-label=\"sortDate\" onClick={props.handleSortDate} >\r\n                        {props.dateSortedAsc === 0\r\n                            ? <ImportExportIcon style={{fill: 'white'}}/>\r\n                            : props.dateSortedAsc % 2 == 0 \r\n                                ? <ArrowDropDownIcon style={{fill: 'white'}}/>\r\n                                : <ArrowDropUpIcon style={{fill: 'white'}}/>}\r\n                    </IconButton>\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\">Tag(s)</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Quick Actions</StyledTableCell>\r\n\t\t\t</TableRow> \r\n        </TableHead>\r\n    )\r\n}","/home/ganhongyao/donezo-frontend/src/Components/HomePage.js",["92","93"],"/home/ganhongyao/donezo-frontend/src/Components/EditTodoForm.js",["94","95","96","97","98"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormControl, Grid, IconButton, InputLabel, makeStyles, MenuItem, Select, Tooltip } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actionicon: {\r\n    fill: 'black'\r\n  },\r\n\r\n  autocomplete: {\r\n    width: '300px'\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function EditTodoForm(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tooltip title=\"Edit\" arrow>\r\n        <IconButton onClick={handleClickOpen}>\r\n          <EditIcon className={classes.actionicon}/>\r\n        </IconButton>\r\n      </Tooltip>\r\n      \r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"createform\" maxWidth=\"xs\">\r\n        <form onSubmit={props.handleEdit}>  \r\n        <DialogTitle id=\"createform\">Edit task</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            name=\"title\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            required\r\n            variant=\"filled\"\r\n            onChange={props.handleChange}\r\n            defaultValue={props.todo.title}\r\n          />\r\n\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  id=\"duedate\"\r\n                  variant=\"inline\"\r\n                  label=\"Due Date\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  InputAdornmentProps={{ position: \"start\" }}\r\n                  onChange={props.handleDateChange}\r\n                  value={props.defaultDate}\r\n                  required\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            <br/>\r\n              <FormControl>                \r\n              <Autocomplete\r\n                multiple\r\n                id=\"tags-filled\"\r\n                options={props.tags.map((option) => option.name)}\r\n                freeSolo\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" label={option} size=\"small\" {...getTagProps({ index })} />\r\n                  ))\r\n                \r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"filled\" label=\"Tags\" placeholder=\"Type to create new tag\"/>\r\n                )}\r\n                className={classes.autocomplete}\r\n                onChange={props.handleTagChange}\r\n                defaultValue={props.todo.tags_list}\r\n              />\r\n              </FormControl>\r\n\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            fullWidth\r\n            variant=\"filled\"\r\n            onChange={props.handleChange}\r\n            multiline\r\n            defaultValue={props.todo.description}\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\" onClick={handleClose} disabled={!props.canEdit} className={classes.createbutton}>\r\n            Edit\r\n          </Button>\r\n        </DialogActions>\r\n        </form>\r\n        \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","/home/ganhongyao/donezo-frontend/src/App.js",["99","100","101","102","103","104"],"/home/ganhongyao/donezo-frontend/src/Components/Drawer.js",[],"/home/ganhongyao/donezo-frontend/src/Components/SearchBar.js",[],"/home/ganhongyao/donezo-frontend/src/Components/SignupPage.js",["105","106","107","108","109","110","111"],"/home/ganhongyao/donezo-frontend/src/Components/TodoContainer.js",["112","113"],"/home/ganhongyao/donezo-frontend/src/Components/CompletedPage.js",["114","115"],"/home/ganhongyao/donezo-frontend/src/Components/TodayPage.js",[],{"ruleId":"116","severity":1,"message":"117","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":20},{"ruleId":"116","severity":1,"message":"120","line":4,"column":26,"nodeType":"118","messageId":"119","endLine":4,"endColumn":34},{"ruleId":"116","severity":1,"message":"121","line":4,"column":49,"nodeType":"118","messageId":"119","endLine":4,"endColumn":65},{"ruleId":"116","severity":1,"message":"122","line":4,"column":67,"nodeType":"118","messageId":"119","endLine":4,"endColumn":71},{"ruleId":"116","severity":1,"message":"123","line":70,"column":17,"nodeType":"118","messageId":"119","endLine":70,"endColumn":22},{"ruleId":"116","severity":1,"message":"124","line":70,"column":24,"nodeType":"118","messageId":"119","endLine":70,"endColumn":32},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":20},{"ruleId":"116","severity":1,"message":"129","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":16},{"ruleId":"116","severity":1,"message":"130","line":3,"column":36,"nodeType":"118","messageId":"119","endLine":3,"endColumn":44},{"ruleId":"116","severity":1,"message":"131","line":9,"column":10,"nodeType":"118","messageId":"119","endLine":9,"endColumn":24},{"ruleId":"116","severity":1,"message":"132","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":29},{"ruleId":"116","severity":1,"message":"133","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":25},{"ruleId":"116","severity":1,"message":"122","line":9,"column":23,"nodeType":"118","messageId":"119","endLine":9,"endColumn":27},{"ruleId":"116","severity":1,"message":"134","line":9,"column":41,"nodeType":"118","messageId":"119","endLine":9,"endColumn":51},{"ruleId":"116","severity":1,"message":"135","line":9,"column":65,"nodeType":"118","messageId":"119","endLine":9,"endColumn":73},{"ruleId":"116","severity":1,"message":"136","line":50,"column":9,"nodeType":"118","messageId":"119","endLine":50,"endColumn":16},{"ruleId":"125","replacedBy":"137"},{"ruleId":"127","replacedBy":"138"},{"ruleId":"116","severity":1,"message":"133","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":43,"column":21,"nodeType":"141","endLine":43,"endColumn":99},{"ruleId":"139","severity":1,"message":"140","line":48,"column":21,"nodeType":"141","endLine":48,"endColumn":102},{"ruleId":"139","severity":1,"message":"140","line":52,"column":21,"nodeType":"141","endLine":52,"endColumn":94},{"ruleId":"116","severity":1,"message":"129","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":16},{"ruleId":"116","severity":1,"message":"142","line":32,"column":11,"nodeType":"118","messageId":"119","endLine":32,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":42,"column":56,"nodeType":"145","messageId":"146","endLine":42,"endColumn":58},{"ruleId":"143","severity":1,"message":"144","line":52,"column":55,"nodeType":"145","messageId":"146","endLine":52,"endColumn":57},{"ruleId":"143","severity":1,"message":"144","line":43,"column":30,"nodeType":"145","messageId":"146","endLine":43,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":63,"column":5,"nodeType":"145","messageId":"146","endLine":63,"endColumn":7},{"ruleId":"116","severity":1,"message":"133","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":25},{"ruleId":"116","severity":1,"message":"122","line":9,"column":23,"nodeType":"118","messageId":"119","endLine":9,"endColumn":27},{"ruleId":"116","severity":1,"message":"134","line":9,"column":41,"nodeType":"118","messageId":"119","endLine":9,"endColumn":51},{"ruleId":"116","severity":1,"message":"135","line":9,"column":65,"nodeType":"118","messageId":"119","endLine":9,"endColumn":73},{"ruleId":"116","severity":1,"message":"147","line":9,"column":75,"nodeType":"118","messageId":"119","endLine":9,"endColumn":81},{"ruleId":"116","severity":1,"message":"148","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":20},{"ruleId":"116","severity":1,"message":"149","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":21},{"ruleId":"116","severity":1,"message":"150","line":8,"column":3,"nodeType":"118","messageId":"119","endLine":8,"endColumn":7},{"ruleId":"116","severity":1,"message":"151","line":9,"column":3,"nodeType":"118","messageId":"119","endLine":9,"endColumn":11},{"ruleId":"116","severity":1,"message":"152","line":14,"column":8,"nodeType":"118","messageId":"119","endLine":14,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":20},{"ruleId":"116","severity":1,"message":"120","line":4,"column":26,"nodeType":"118","messageId":"119","endLine":4,"endColumn":34},{"ruleId":"116","severity":1,"message":"121","line":4,"column":49,"nodeType":"118","messageId":"119","endLine":4,"endColumn":65},{"ruleId":"116","severity":1,"message":"122","line":4,"column":67,"nodeType":"118","messageId":"119","endLine":4,"endColumn":71},{"ruleId":"116","severity":1,"message":"123","line":73,"column":17,"nodeType":"118","messageId":"119","endLine":73,"endColumn":22},{"ruleId":"116","severity":1,"message":"124","line":73,"column":24,"nodeType":"118","messageId":"119","endLine":73,"endColumn":32},{"ruleId":"143","severity":1,"message":"153","line":75,"column":33,"nodeType":"145","messageId":"146","endLine":75,"endColumn":35},{"ruleId":"116","severity":1,"message":"154","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":13},{"ruleId":"116","severity":1,"message":"155","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":32,"column":30,"nodeType":"145","messageId":"146","endLine":32,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":52,"column":5,"nodeType":"145","messageId":"146","endLine":52,"endColumn":7},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'Grid' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","no-native-reassign",["156"],"no-negated-in-lhs",["157"],"'Button' is defined but never used.","'ListItem' is defined but never used.","'ToastContainer' is defined but never used.","'formatDistanceToNow' is defined but never used.","'DialogContentText' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'options' is assigned a value but never used.",["156"],["157"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Select' is defined but never used.","'useState' is defined but never used.","'CssBaseline' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'AddTodoForm' is defined but never used.","Expected '!==' and instead saw '!='.","'axios' is defined but never used.","'TableHead' is defined but never used.","no-global-assign","no-unsafe-negation"]